name: Build, Package, and Release

on:
  workflow_dispatch:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  build-and-package-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      name: Check out repository code

    - name: Install build tools and dependencies
      run: sudo apt-get update && sudo apt-get install -y cmake make

    - name: Build the project (Ubuntu)
      run: |
        mkdir build
        cd build
        cmake ..
        make

    - name: Make artifact executable (Ubuntu)
      run: chmod +x build/*        

    - name: Upload installer as artifact 
      uses: actions/upload-artifact@v2
      with:
        name: poker-eval-linux-amd64
        path: build/*



  build-and-package-arm64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install build tools and dependencies (ARM64)
      run: sudo apt-get update && sudo apt-get install -y cmake make gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

    - name: Build the project (ARM64)
      run: |
        mkdir build-arm64
        cd build-arm64
        cmake ..
        make

    - name: Make artifact executable (ARM64)
      run: chmod +x build-arm64/*


    - name: Upload installer as artifact 
      uses: actions/upload-artifact@v2
      with:
        name: poker-eval-linux-arm64
        path: build-arm64/*


  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      name: Checkout code

    - name: Install CMake
      run: choco install cmake -y

    - name: Install Visual Studio Build Tools
      run: choco install visualstudio2022buildtools -y --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64"

    - name: Configure and Build with CMake
      run: |
        mkdir build  
        cd build  
        cmake .. -G "Visual Studio 17 2022"  
        cmake --build .  

    - name: Upload installer as artifact (Windows)
      uses: actions/upload-artifact@v2
      with:
        name: poker-eval-windows-amd64
        path: build/Debug/*.*


  build-mac-os:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout code

      - name: Setup environment
        run: |
          brew update
          brew install cmake
          brew install make

      - name: Build the project
        run: |
          mkdir build
          cd build
          cmake ..
          make

      - name: Make artifact executable (MacOS)
        run: chmod +x build/*

      - name: Upload installer as artifact
        uses: actions/upload-artifact@v2
        with:
          name: poker-eval-darwin-amd64
          path: build/*

  create-release:
    runs-on: ubuntu-latest
    needs: [build-and-package-ubuntu, build-and-package-arm64, build-windows, build-mac-os]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: "New release ${{ github.ref_name }} with last build artifacts"

      - name: Upload Release Asset (Ubuntu)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/poker-eval-linux-amd64
          asset_name: poker-eval-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (ARM64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/poker-eval-linux-arm64
          asset_name: poker-eval-linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/poker-eval-windows-amd64
          asset_name: poker-eval-windows-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (MacOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/poker-eval-darwin-amd64
          asset_name: poker-eval-darwin-amd64
          asset_content_type: application/octet-stream